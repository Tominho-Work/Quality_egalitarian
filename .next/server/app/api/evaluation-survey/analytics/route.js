"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/evaluation-survey/analytics/route";
exports.ids = ["app/api/evaluation-survey/analytics/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute&page=%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute.ts&appDir=C%3A%5CUsers%5Cboris%5CAI%5CQuality_egalitarian%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cboris%5CAI%5CQuality_egalitarian&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute&page=%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute.ts&appDir=C%3A%5CUsers%5Cboris%5CAI%5CQuality_egalitarian%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cboris%5CAI%5CQuality_egalitarian&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_boris_AI_Quality_egalitarian_app_api_evaluation_survey_analytics_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/evaluation-survey/analytics/route.ts */ \"(rsc)/./app/api/evaluation-survey/analytics/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/evaluation-survey/analytics/route\",\n        pathname: \"/api/evaluation-survey/analytics\",\n        filename: \"route\",\n        bundlePath: \"app/api/evaluation-survey/analytics/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\boris\\\\AI\\\\Quality_egalitarian\\\\app\\\\api\\\\evaluation-survey\\\\analytics\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_boris_AI_Quality_egalitarian_app_api_evaluation_survey_analytics_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/evaluation-survey/analytics/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZldmFsdWF0aW9uLXN1cnZleSUyRmFuYWx5dGljcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGZXZhbHVhdGlvbi1zdXJ2ZXklMkZhbmFseXRpY3MlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZldmFsdWF0aW9uLXN1cnZleSUyRmFuYWx5dGljcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNib3JpcyU1Q0FJJTVDUXVhbGl0eV9lZ2FsaXRhcmlhbiU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDYm9yaXMlNUNBSSU1Q1F1YWxpdHlfZWdhbGl0YXJpYW4maXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzJDO0FBQ3hIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXZlbnQtcGVyZm9ybWFuY2UtdHJhY2tlci8/ZWI1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxib3Jpc1xcXFxBSVxcXFxRdWFsaXR5X2VnYWxpdGFyaWFuXFxcXGFwcFxcXFxhcGlcXFxcZXZhbHVhdGlvbi1zdXJ2ZXlcXFxcYW5hbHl0aWNzXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9ldmFsdWF0aW9uLXN1cnZleS9hbmFseXRpY3Mvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9ldmFsdWF0aW9uLXN1cnZleS9hbmFseXRpY3NcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2V2YWx1YXRpb24tc3VydmV5L2FuYWx5dGljcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXGJvcmlzXFxcXEFJXFxcXFF1YWxpdHlfZWdhbGl0YXJpYW5cXFxcYXBwXFxcXGFwaVxcXFxldmFsdWF0aW9uLXN1cnZleVxcXFxhbmFseXRpY3NcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2V2YWx1YXRpb24tc3VydmV5L2FuYWx5dGljcy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute&page=%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute.ts&appDir=C%3A%5CUsers%5Cboris%5CAI%5CQuality_egalitarian%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cboris%5CAI%5CQuality_egalitarian&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/evaluation-survey/analytics/route.ts":
/*!******************************************************!*\
  !*** ./app/api/evaluation-survey/analytics/route.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_text_processing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/text-processing */ \"(rsc)/./lib/text-processing.ts\");\n\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_1__.PrismaClient();\nasync function GET(req) {\n    const { searchParams } = new URL(req.url);\n    const cycleId = searchParams.get(\"cycleId\");\n    const role = searchParams.get(\"role\");\n    const university = searchParams.get(\"university\");\n    try {\n        // Get cycles for filter dropdown\n        const cycles = await prisma.eventCycle.findMany({\n            select: {\n                id: true,\n                name: true,\n                startDate: true,\n                endDate: true\n            },\n            orderBy: {\n                startDate: \"asc\"\n            }\n        });\n        // Get unique roles and universities for filter dropdowns\n        const uniqueRoles = await prisma.evaluationSurveyResponse.findMany({\n            select: {\n                role: true\n            },\n            distinct: [\n                \"role\"\n            ],\n            orderBy: {\n                role: \"asc\"\n            }\n        });\n        const uniqueUniversities = await prisma.evaluationSurveyResponse.findMany({\n            select: {\n                university: true\n            },\n            distinct: [\n                \"university\"\n            ],\n            orderBy: {\n                university: \"asc\"\n            }\n        });\n        // Build filter\n        const whereClause = {};\n        if (cycleId) whereClause.cycleId = cycleId;\n        if (role) whereClause.role = role;\n        if (university) whereClause.university = university;\n        // Get all survey responses (respecting all selected filters)\n        const responses = await prisma.evaluationSurveyResponse.findMany({\n            where: whereClause,\n            include: {\n                cycle: {\n                    select: {\n                        name: true\n                    }\n                }\n            }\n        });\n        if (responses.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                cycles,\n                roles: uniqueRoles.map((r)=>r.role),\n                universities: uniqueUniversities.map((u)=>u.university),\n                metrics: {\n                    overallSatisfaction: {\n                        value: 0,\n                        target: 4.0,\n                        count: 0\n                    },\n                    preparedness: {\n                        value: 0,\n                        target: 4.0,\n                        count: 0\n                    }\n                },\n                questionAverages: {},\n                wordCloudData: [],\n                demographics: {\n                    byRole: {},\n                    byUniversity: {},\n                    byCycle: {}\n                },\n                totalResponses: 0\n            });\n        }\n        // Calculate KPI metrics\n        const satisfactionQuestions = [\n            \"planning\",\n            \"localStaff\",\n            \"sendingInstitution\",\n            \"accommodationTravel\",\n            \"programme\",\n            \"culturalTour\",\n            \"overallSatisfaction\"\n        ];\n        // Overall satisfaction average (Q2-Q8, but only count questions with data)\n        let satisfactionSum = 0;\n        let satisfactionQuestionCount = 0;\n        responses.forEach((response)=>{\n            satisfactionQuestions.forEach((question)=>{\n                const value = response[question] || 0;\n                if (value > 0) {\n                    satisfactionSum += value;\n                    satisfactionQuestionCount++;\n                }\n            });\n        });\n        const overallSatisfactionAvg = satisfactionQuestionCount > 0 ? satisfactionSum / satisfactionQuestionCount : 0;\n        // Preparedness average (Q9)\n        const preparednessSum = responses.reduce((sum, response)=>sum + (response.preparedness || 0), 0);\n        const preparednessAvg = responses.length > 0 ? preparednessSum / responses.length : 0;\n        // Process comments for word cloud\n        const comments = responses.map((r)=>r.comments).filter((c)=>c && c.trim().length > 0);\n        const wordCloudData = comments.length > 0 ? (0,_lib_text_processing__WEBPACK_IMPORTED_MODULE_2__.processTextToWords)(comments) : [];\n        // Demographics breakdown\n        const demographics = {\n            byRole: responses.reduce((acc, r)=>{\n                acc[r.role] = (acc[r.role] || 0) + 1;\n                return acc;\n            }, {}),\n            byUniversity: responses.reduce((acc, r)=>{\n                acc[r.university] = (acc[r.university] || 0) + 1;\n                return acc;\n            }, {}),\n            byCycle: responses.reduce((acc, r)=>{\n                const cycleName = r.cycle?.name || \"Unknown\";\n                acc[cycleName] = (acc[cycleName] || 0) + 1;\n                return acc;\n            }, {})\n        };\n        // Individual question averages for detailed breakdown\n        const questionAverages = satisfactionQuestions.reduce((acc, question)=>{\n            const validResponses = responses.filter((response)=>(response[question] || 0) > 0);\n            const sum = validResponses.reduce((sum, response)=>sum + (response[question] || 0), 0);\n            acc[question] = validResponses.length > 0 ? sum / validResponses.length : 0;\n            return acc;\n        }, {});\n        // Overall trend by cycle (ignores cycleId filter, but applies other filters)\n        const trendWhere = {\n            ...whereClause\n        };\n        delete trendWhere.cycleId;\n        const trendResponses = await prisma.evaluationSurveyResponse.findMany({\n            where: trendWhere,\n            select: {\n                cycleId: true,\n                planning: true,\n                localStaff: true,\n                sendingInstitution: true,\n                accommodationTravel: true,\n                programme: true,\n                culturalTour: true,\n                overallSatisfaction: true\n            }\n        });\n        const perCycleAggregation = trendResponses.reduce((acc, r)=>{\n            const values = [\n                r.planning,\n                r.localStaff,\n                r.sendingInstitution,\n                r.accommodationTravel,\n                r.programme,\n                r.culturalTour,\n                r.overallSatisfaction\n            ];\n            let sum = 0;\n            let count = 0;\n            values.forEach((v)=>{\n                const value = v || 0;\n                if (value > 0) {\n                    sum += value;\n                    count += 1;\n                }\n            });\n            if (!acc[r.cycleId]) acc[r.cycleId] = {\n                sum: 0,\n                count: 0\n            };\n            acc[r.cycleId].sum += sum;\n            acc[r.cycleId].count += count;\n            return acc;\n        }, {});\n        const overallTrend = cycles.map((cycle)=>{\n            const agg = perCycleAggregation[cycle.id] || {\n                sum: 0,\n                count: 0\n            };\n            const avg = agg.count > 0 ? Math.round(agg.sum / agg.count * 100) / 100 : 0;\n            return {\n                cycle: cycle.name,\n                value: avg\n            };\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            cycles,\n            roles: uniqueRoles.map((r)=>r.role),\n            universities: uniqueUniversities.map((u)=>u.university),\n            metrics: {\n                overallSatisfaction: {\n                    value: Math.round(overallSatisfactionAvg * 100) / 100,\n                    target: 4.0,\n                    count: responses.length\n                },\n                preparedness: {\n                    value: Math.round(preparednessAvg * 100) / 100,\n                    target: 4.0,\n                    count: responses.length\n                }\n            },\n            questionAverages,\n            wordCloudData,\n            demographics,\n            totalResponses: responses.length,\n            overallTrend\n        });\n    } catch (error) {\n        console.error(\"Analytics API error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch analytics\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/evaluation-survey/analytics/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/text-processing.ts":
/*!********************************!*\
  !*** ./lib/text-processing.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processTextToWords: () => (/* binding */ processTextToWords)\n/* harmony export */ });\n// Utility function to process feedback text into word data\nfunction processTextToWords(texts, sentiments, stopWords = []) {\n    const defaultStopWords = [\n        \"the\",\n        \"and\",\n        \"or\",\n        \"but\",\n        \"in\",\n        \"on\",\n        \"at\",\n        \"to\",\n        \"for\",\n        \"of\",\n        \"with\",\n        \"by\",\n        \"from\",\n        \"up\",\n        \"about\",\n        \"into\",\n        \"through\",\n        \"during\",\n        \"before\",\n        \"after\",\n        \"above\",\n        \"below\",\n        \"between\",\n        \"among\",\n        \"around\",\n        \"through\",\n        \"a\",\n        \"an\",\n        \"is\",\n        \"was\",\n        \"are\",\n        \"were\",\n        \"be\",\n        \"been\",\n        \"being\",\n        \"have\",\n        \"has\",\n        \"had\",\n        \"do\",\n        \"does\",\n        \"did\",\n        \"will\",\n        \"would\",\n        \"could\",\n        \"should\",\n        \"may\",\n        \"might\",\n        \"must\",\n        \"can\",\n        \"this\",\n        \"that\",\n        \"these\",\n        \"those\",\n        \"i\",\n        \"you\",\n        \"he\",\n        \"she\",\n        \"it\",\n        \"we\",\n        \"they\",\n        \"me\",\n        \"him\",\n        \"her\",\n        \"us\",\n        \"them\"\n    ];\n    const allStopWords = [\n        ...defaultStopWords,\n        ...stopWords.map((w)=>w.toLowerCase())\n    ];\n    const wordCounts = new Map();\n    texts.forEach((text, index)=>{\n        const sentiment = sentiments?.[index] || \"neutral\";\n        const words = text.toLowerCase().replace(/[^\\w\\s]/g, \"\").split(/\\s+/).filter((word)=>word.length > 2 && !allStopWords.includes(word) && isNaN(Number(word)));\n        words.forEach((word)=>{\n            const existing = wordCounts.get(word);\n            if (existing) {\n                existing.count++;\n            } else {\n                wordCounts.set(word, {\n                    count: 1,\n                    sentiment\n                });\n            }\n        });\n    });\n    return Array.from(wordCounts.entries()).map(([text, data])=>({\n            text,\n            size: data.count,\n            sentiment: data.sentiment\n        })).sort((a, b)=>b.size - a.size).slice(0, 100) // Limit to top 100 words\n    ;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvdGV4dC1wcm9jZXNzaW5nLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFPQSwyREFBMkQ7QUFDcEQsU0FBU0EsbUJBQ2RDLEtBQWUsRUFDZkMsVUFBcUIsRUFDckJDLFlBQXNCLEVBQUU7SUFFeEIsTUFBTUMsbUJBQW1CO1FBQ3ZCO1FBQU87UUFBTztRQUFNO1FBQU87UUFBTTtRQUFNO1FBQU07UUFBTTtRQUFPO1FBQU07UUFDaEU7UUFBTTtRQUFRO1FBQU07UUFBUztRQUFRO1FBQVc7UUFBVTtRQUMxRDtRQUFTO1FBQVM7UUFBUztRQUFXO1FBQVM7UUFBVTtRQUN6RDtRQUFLO1FBQU07UUFBTTtRQUFPO1FBQU87UUFBUTtRQUFNO1FBQVE7UUFBUztRQUM5RDtRQUFPO1FBQU87UUFBTTtRQUFRO1FBQU87UUFBUTtRQUFTO1FBQVM7UUFDN0Q7UUFBTztRQUFTO1FBQVE7UUFBTztRQUFRO1FBQVE7UUFBUztRQUN4RDtRQUFLO1FBQU87UUFBTTtRQUFPO1FBQU07UUFBTTtRQUFRO1FBQU07UUFBTztRQUFPO1FBQU07S0FDeEU7SUFFRCxNQUFNQyxlQUFlO1dBQUlEO1dBQXFCRCxVQUFVRyxHQUFHLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLFdBQVc7S0FBSTtJQUNsRixNQUFNQyxhQUFhLElBQUlDO0lBRXZCVCxNQUFNVSxPQUFPLENBQUMsQ0FBQ0MsTUFBTUM7UUFDbkIsTUFBTUMsWUFBWVosWUFBWSxDQUFDVyxNQUFNLElBQUk7UUFDekMsTUFBTUUsUUFBUUgsS0FDWEosV0FBVyxHQUNYUSxPQUFPLENBQUMsWUFBWSxJQUNwQkMsS0FBSyxDQUFDLE9BQ05DLE1BQU0sQ0FBQ0MsQ0FBQUEsT0FDTkEsS0FBS0MsTUFBTSxHQUFHLEtBQ2QsQ0FBQ2YsYUFBYWdCLFFBQVEsQ0FBQ0YsU0FDdkJHLE1BQU1DLE9BQU9KO1FBR2pCSixNQUFNSixPQUFPLENBQUNRLENBQUFBO1lBQ1osTUFBTUssV0FBV2YsV0FBV2dCLEdBQUcsQ0FBQ047WUFDaEMsSUFBSUssVUFBVTtnQkFDWkEsU0FBU0UsS0FBSztZQUNoQixPQUFPO2dCQUNMakIsV0FBV2tCLEdBQUcsQ0FBQ1IsTUFBTTtvQkFBRU8sT0FBTztvQkFBR1o7Z0JBQVU7WUFDN0M7UUFDRjtJQUNGO0lBRUEsT0FBT2MsTUFBTUMsSUFBSSxDQUFDcEIsV0FBV3FCLE9BQU8sSUFDakN4QixHQUFHLENBQUMsQ0FBQyxDQUFDTSxNQUFNbUIsS0FBSyxHQUFNO1lBQ3RCbkI7WUFDQW9CLE1BQU1ELEtBQUtMLEtBQUs7WUFDaEJaLFdBQVdpQixLQUFLakIsU0FBUztRQUMzQixJQUNDbUIsSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQU1BLEVBQUVILElBQUksR0FBR0UsRUFBRUYsSUFBSSxFQUM5QkksS0FBSyxDQUFDLEdBQUcsS0FBSyx5QkFBeUI7O0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXZlbnQtcGVyZm9ybWFuY2UtdHJhY2tlci8uL2xpYi90ZXh0LXByb2Nlc3NpbmcudHM/ZjI2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgV29yZERhdGEge1xyXG4gIHRleHQ6IHN0cmluZ1xyXG4gIHNpemU6IG51bWJlclxyXG4gIHNlbnRpbWVudD86ICdwb3NpdGl2ZScgfCAnbmVnYXRpdmUnIHwgJ25ldXRyYWwnXHJcbiAgY2F0ZWdvcnk/OiBzdHJpbmdcclxufVxyXG5cclxuLy8gVXRpbGl0eSBmdW5jdGlvbiB0byBwcm9jZXNzIGZlZWRiYWNrIHRleHQgaW50byB3b3JkIGRhdGFcclxuZXhwb3J0IGZ1bmN0aW9uIHByb2Nlc3NUZXh0VG9Xb3JkcyhcclxuICB0ZXh0czogc3RyaW5nW10sXHJcbiAgc2VudGltZW50cz86IHN0cmluZ1tdLFxyXG4gIHN0b3BXb3Jkczogc3RyaW5nW10gPSBbXVxyXG4pOiBXb3JkRGF0YVtdIHtcclxuICBjb25zdCBkZWZhdWx0U3RvcFdvcmRzID0gW1xyXG4gICAgJ3RoZScsICdhbmQnLCAnb3InLCAnYnV0JywgJ2luJywgJ29uJywgJ2F0JywgJ3RvJywgJ2ZvcicsICdvZicsICd3aXRoJyxcclxuICAgICdieScsICdmcm9tJywgJ3VwJywgJ2Fib3V0JywgJ2ludG8nLCAndGhyb3VnaCcsICdkdXJpbmcnLCAnYmVmb3JlJyxcclxuICAgICdhZnRlcicsICdhYm92ZScsICdiZWxvdycsICdiZXR3ZWVuJywgJ2Ftb25nJywgJ2Fyb3VuZCcsICd0aHJvdWdoJyxcclxuICAgICdhJywgJ2FuJywgJ2lzJywgJ3dhcycsICdhcmUnLCAnd2VyZScsICdiZScsICdiZWVuJywgJ2JlaW5nJywgJ2hhdmUnLFxyXG4gICAgJ2hhcycsICdoYWQnLCAnZG8nLCAnZG9lcycsICdkaWQnLCAnd2lsbCcsICd3b3VsZCcsICdjb3VsZCcsICdzaG91bGQnLFxyXG4gICAgJ21heScsICdtaWdodCcsICdtdXN0JywgJ2NhbicsICd0aGlzJywgJ3RoYXQnLCAndGhlc2UnLCAndGhvc2UnLFxyXG4gICAgJ2knLCAneW91JywgJ2hlJywgJ3NoZScsICdpdCcsICd3ZScsICd0aGV5JywgJ21lJywgJ2hpbScsICdoZXInLCAndXMnLCAndGhlbSdcclxuICBdXHJcblxyXG4gIGNvbnN0IGFsbFN0b3BXb3JkcyA9IFsuLi5kZWZhdWx0U3RvcFdvcmRzLCAuLi5zdG9wV29yZHMubWFwKHcgPT4gdy50b0xvd2VyQ2FzZSgpKV1cclxuICBjb25zdCB3b3JkQ291bnRzID0gbmV3IE1hcDxzdHJpbmcsIHsgY291bnQ6IG51bWJlcjsgc2VudGltZW50OiBzdHJpbmcgfT4oKVxyXG5cclxuICB0ZXh0cy5mb3JFYWNoKCh0ZXh0LCBpbmRleCkgPT4ge1xyXG4gICAgY29uc3Qgc2VudGltZW50ID0gc2VudGltZW50cz8uW2luZGV4XSB8fCAnbmV1dHJhbCdcclxuICAgIGNvbnN0IHdvcmRzID0gdGV4dFxyXG4gICAgICAudG9Mb3dlckNhc2UoKVxyXG4gICAgICAucmVwbGFjZSgvW15cXHdcXHNdL2csICcnKVxyXG4gICAgICAuc3BsaXQoL1xccysvKVxyXG4gICAgICAuZmlsdGVyKHdvcmQgPT4gXHJcbiAgICAgICAgd29yZC5sZW5ndGggPiAyICYmIFxyXG4gICAgICAgICFhbGxTdG9wV29yZHMuaW5jbHVkZXMod29yZCkgJiZcclxuICAgICAgICBpc05hTihOdW1iZXIod29yZCkpXHJcbiAgICAgIClcclxuXHJcbiAgICB3b3Jkcy5mb3JFYWNoKHdvcmQgPT4ge1xyXG4gICAgICBjb25zdCBleGlzdGluZyA9IHdvcmRDb3VudHMuZ2V0KHdvcmQpXHJcbiAgICAgIGlmIChleGlzdGluZykge1xyXG4gICAgICAgIGV4aXN0aW5nLmNvdW50KytcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB3b3JkQ291bnRzLnNldCh3b3JkLCB7IGNvdW50OiAxLCBzZW50aW1lbnQgfSlcclxuICAgICAgfVxyXG4gICAgfSlcclxuICB9KVxyXG5cclxuICByZXR1cm4gQXJyYXkuZnJvbSh3b3JkQ291bnRzLmVudHJpZXMoKSlcclxuICAgIC5tYXAoKFt0ZXh0LCBkYXRhXSkgPT4gKHtcclxuICAgICAgdGV4dCxcclxuICAgICAgc2l6ZTogZGF0YS5jb3VudCxcclxuICAgICAgc2VudGltZW50OiBkYXRhLnNlbnRpbWVudCBhcyBhbnksXHJcbiAgICB9KSlcclxuICAgIC5zb3J0KChhLCBiKSA9PiBiLnNpemUgLSBhLnNpemUpXHJcbiAgICAuc2xpY2UoMCwgMTAwKSAvLyBMaW1pdCB0byB0b3AgMTAwIHdvcmRzXHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIHsgV29yZERhdGEgfSJdLCJuYW1lcyI6WyJwcm9jZXNzVGV4dFRvV29yZHMiLCJ0ZXh0cyIsInNlbnRpbWVudHMiLCJzdG9wV29yZHMiLCJkZWZhdWx0U3RvcFdvcmRzIiwiYWxsU3RvcFdvcmRzIiwibWFwIiwidyIsInRvTG93ZXJDYXNlIiwid29yZENvdW50cyIsIk1hcCIsImZvckVhY2giLCJ0ZXh0IiwiaW5kZXgiLCJzZW50aW1lbnQiLCJ3b3JkcyIsInJlcGxhY2UiLCJzcGxpdCIsImZpbHRlciIsIndvcmQiLCJsZW5ndGgiLCJpbmNsdWRlcyIsImlzTmFOIiwiTnVtYmVyIiwiZXhpc3RpbmciLCJnZXQiLCJjb3VudCIsInNldCIsIkFycmF5IiwiZnJvbSIsImVudHJpZXMiLCJkYXRhIiwic2l6ZSIsInNvcnQiLCJhIiwiYiIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/text-processing.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute&page=%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevaluation-survey%2Fanalytics%2Froute.ts&appDir=C%3A%5CUsers%5Cboris%5CAI%5CQuality_egalitarian%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cboris%5CAI%5CQuality_egalitarian&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();